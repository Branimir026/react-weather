{"version":3,"sources":["components/SearchBox.js","components/LocationBox.js","components/TemperatureBox.js","components/Current.js","components/Daily.js","components/Loading.js","components/Error.js","App.js","index.js"],"names":["SearchBox","inputText","setCity","setCoordinates","setInputText","setErrorMessage","Row","Col","FormControl","className","placeholder","aria-label","onChange","e","preventDefault","target","value","onKeyPress","trim","key","fetch","then","res","json","result","length","console","log","lat","lon","name","LocationBox","cityName","Alert","TemperatureBox","num","date","mainTemp","sunset","sunrise","stringWeather","iconId","feelsLike","humidity","datetime","windDeg","windSpeed","timeConverter","UNIX_timestamp","full","a","Date","months","year","getFullYear","month","getMonth","getDate","hour","getHours","slice","min","getMinutes","sec","getSeconds","toLocaleDateString","weekday","lg","xs","Image","src","Math","round","toUpperCase","floor","icon","faArrowUp","style","transform","Current","data","temp","weather","description","feels_like","dt","wind_deg","wind_speed","Daily","map","day","i","Loading","span","offset","message","api","App","useState","city","apiResult","setApiResult","isCold","setIsCold","coordinates","errorMessage","getIsCold","useCallback","undefined","current","getLatLong","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","useEffect","basename","Container","Error","Object","keys","Button","variant","to","path","element","daily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dc728ce.chunk.js","sourcesContent":["import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nfunction SearchBox({\r\n  inputText,\r\n  setCity,\r\n  setCoordinates,\r\n  setInputText,\r\n  setErrorMessage,\r\n}) {\r\n  const inputTextHandler = (e) => {\r\n    e.preventDefault();\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (inputText.trim() === \"\") {\r\n      return;\r\n    }\r\n    if (e.key === \"Enter\") {\r\n      fetch(\r\n        `http://api.openweathermap.org/geo/1.0/direct?q=${inputText}&limit=1&appid=7c65b73889e71f8242cc2cfdca0bb056`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result.length !== 0) {\r\n            console.log(result);\r\n            setCoordinates([result[0].lat, result[0].lon]);\r\n            setCity(result[0].name);\r\n            setInputText(\"\");\r\n            setErrorMessage(\"\");\r\n          } else {\r\n            setErrorMessage(\"Something went wrong, please try another city\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <FormControl\r\n            className=\"searchBox\"\r\n            placeholder=\"Search and press enter..\"\r\n            aria-label=\"Search\"\r\n            onChange={inputTextHandler}\r\n            onKeyPress={handleKeyPress}\r\n            value={inputText}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nfunction LocationBox({ cityName }) {\r\n  return (\r\n    <div className=\"header\">\r\n      <Row className=\"cityName\">\r\n        <Alert>{cityName}</Alert>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationBox;\r\n","import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction TemperatureBox({\r\n  mainTemp,\r\n  sunset,\r\n  sunrise,\r\n  stringWeather,\r\n  iconId,\r\n  feelsLike,\r\n  humidity,\r\n  datetime,\r\n  windDeg,\r\n  windSpeed,\r\n}) {\r\n  function timeConverter(UNIX_timestamp, full = true) {\r\n    var a = new Date(UNIX_timestamp * 1000);\r\n    var months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    var time;\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours();\r\n    hour = (\"0\" + hour).slice(-2);\r\n    var min = a.getMinutes();\r\n    min = (\"0\" + min).slice(-2);\r\n    var sec = a.getSeconds();\r\n    sec = (\"0\" + sec).slice(-2);\r\n    if (full) {\r\n      time =\r\n        date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\r\n    } else {\r\n      time = hour + \":\" + min + \":\" + sec;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  function getDayName(date) {\r\n    var a = new Date(date * 1000);\r\n    return a.toLocaleDateString(\"en-US\", { weekday: \"long\" });\r\n  }\r\n\r\n  function degToCompass(num) {\r\n    var val = Math.floor(num / 22.5 + 0.5);\r\n    var arr = [\r\n      \"N\",\r\n      \"NNE\",\r\n      \"NE\",\r\n      \"ENE\",\r\n      \"E\",\r\n      \"ESE\",\r\n      \"SE\",\r\n      \"SSE\",\r\n      \"S\",\r\n      \"SSW\",\r\n      \"SW\",\r\n      \"WSW\",\r\n      \"W\",\r\n      \"WNW\",\r\n      \"NW\",\r\n      \"NNW\",\r\n    ];\r\n    return arr[val % 16];\r\n  }\r\n\r\n  return (\r\n    <div className=\"temperatureBox\">\r\n      <Row>\r\n        <Alert className=\"currentDay\">{getDayName(datetime)}</Alert>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Alert className=\"currentDate\">\r\n          <span>{timeConverter(datetime)}</span>\r\n        </Alert>\r\n      </Row>\r\n\r\n      <Row className=\"tempInfo\">\r\n        <Col lg={6} xs={12}>\r\n          <Row className=\"mainTempBox\">\r\n            <Col lg={6} xs={12} className=\"iconImg\">\r\n              <Image\r\n                src={`https://openweathermap.org/img/wn/${iconId}@2x.png`}\r\n              />\r\n            </Col>\r\n            <Col lg={6} xs={12} className=\"temp\">\r\n              <Col xs={12} className=\"stringTempBox\">\r\n                <Alert className=\"mainTemp\">{Math.round(mainTemp)}°C</Alert>\r\n              </Col>\r\n              <Col xs={12}>\r\n                <Alert className=\"stringWeather\">\r\n                  {stringWeather.toUpperCase()}\r\n                </Alert>\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col lg={6} xs={12}>\r\n          <Row className=\"statsTemp\">\r\n            <Col lg={6} xs={12}>\r\n              <hr />\r\n              <Alert className=\"feelsLike\">{Math.round(feelsLike)}°C</Alert>\r\n              <p>FEELS LIKE</p>\r\n            </Col>\r\n            <Col lg={6} xs={12}>\r\n              <hr />\r\n              <Alert className=\"humidity\">{humidity} %</Alert>\r\n              <p>HUMIDITY</p>\r\n            </Col>\r\n            <Col lg={6} xs={12}>\r\n              <hr />\r\n              <Alert className=\"sunrise\">{timeConverter(sunrise, false)}</Alert>\r\n              <p>SUNRISE</p>\r\n            </Col>\r\n            <Col lg={6} xs={12}>\r\n              <hr />\r\n              <Alert className=\"sunset\">{timeConverter(sunset, false)}</Alert>\r\n              <p>SUNSET</p>\r\n            </Col>\r\n            <Col lg={6} xs={12}>\r\n              <hr />\r\n              <Alert className=\"windDeg\">\r\n                {degToCompass(windDeg)}&nbsp;&nbsp;&nbsp;\r\n                <FontAwesomeIcon\r\n                  icon={faArrowUp}\r\n                  style={{ transform: `rotate(${windDeg}deg)` }}\r\n                />\r\n              </Alert>\r\n              <p>WIND DIRECTION</p>\r\n            </Col>\r\n            <Col lg={6} xs={12}>\r\n              <hr />\r\n              <Alert className=\"windSpeed\">{windSpeed} Km/h</Alert>\r\n              <p>WIND SPEED</p>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TemperatureBox;\r\n","import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport TemperatureBox from \"./TemperatureBox\";\r\n\r\nfunction Current({ data }) {\r\n  return (\r\n    <div>\r\n      <TemperatureBox\r\n        mainTemp={data.temp}\r\n        sunrise={data.sunrise}\r\n        sunset={data.sunset}\r\n        stringWeather={data.weather[0].description}\r\n        iconId={data.weather[0].icon}\r\n        feelsLike={data.feels_like}\r\n        humidity={data.humidity}\r\n        datetime={data.dt}\r\n        windDeg={data.wind_deg}\r\n        windSpeed={data.wind_speed}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Current;\r\n","import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport TemperatureBox from \"./TemperatureBox\";\r\n\r\nfunction Daily({ data }) {\r\n  return (\r\n    <div>\r\n      {data.map((day, i) => {\r\n        return (\r\n          <TemperatureBox\r\n            mainTemp={day.temp.day}\r\n            sunrise={day.sunrise}\r\n            sunset={day.sunset}\r\n            stringWeather={day.weather[0].description}\r\n            iconId={day.weather[0].icon}\r\n            feelsLike={day.feels_like.day}\r\n            humidity={day.humidity}\r\n            datetime={day.dt}\r\n            windDeg={day.wind_deg}\r\n            windSpeed={day.wind_speed}\r\n            key={i}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Daily;\r\n","import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col\r\n          className=\"loading\"\r\n          lg={{ span: 6, offset: 3 }}\r\n          xs={{ span: 8, offset: 2 }}\r\n        >\r\n          <Alert>Loading...</Alert>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nfunction Loading({ message }) {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col\r\n          className=\"error\"\r\n          lg={{ span: 6, offset: 3 }}\r\n          xs={{ span: 8, offset: 2 }}\r\n        >\r\n          <Alert>{message}</Alert>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport SearchBox from \"./components/SearchBox\";\nimport LocationBox from \"./components/LocationBox\";\nimport Current from \"./components/Current\";\nimport Daily from \"./components/Daily\";\nimport Loading from \"./components/Loading\";\nimport Error from \"./components/Error\";\n//importing bootstrap components\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n\nconst api = {\n  key: \"7c65b73889e71f8242cc2cfdca0bb056\",\n  base: \"https://api.openweathermap.org/data/2.5/onecall?\",\n};\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [city, setCity] = useState();\n  const [apiResult, setApiResult] = useState({});\n  const [isCold, setIsCold] = useState(false);\n  const [coordinates, setCoordinates] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const getIsCold = useCallback(() => {\n    if (apiResult.current !== undefined && apiResult.current.temp <= 15) {\n      setIsCold(true);\n    } else {\n      setIsCold(false);\n    }\n  }, [apiResult]);\n\n  const getLatLong = useCallback(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setCoordinates([position.coords.latitude, position.coords.longitude]);\n      fetch(\n        `https://api.openweathermap.org/geo/1.0/reverse?lat=${position.coords.latitude}&lon=${position.coords.longitude}&limit=1&appid=${api.key}`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setCity(result[0].name);\n        });\n    });\n  }, []);\n\n  useEffect(() => {\n    getLatLong();\n  }, [getLatLong]);\n\n  useEffect(() => {\n    if (coordinates.length === 0) {\n      return;\n    }\n    fetch(\n      `${api.base}lat=${coordinates[0]}&lon=${coordinates[1]}&exclude=minutely,hourly&units=metric&appid=${api.key}`\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        setApiResult(result);\n        console.log(result);\n      });\n  }, [coordinates]);\n\n  useEffect(() => {\n    getIsCold();\n  }, [getIsCold]);\n\n  return (\n    <div className={`app ${isCold ? \"cold\" : \"\"}`}>\n      <BrowserRouter basename=\"/react-weather\">\n        <Container>\n          <SearchBox\n            inputText={inputText}\n            setInputText={setInputText}\n            setCity={setCity}\n            setCoordinates={setCoordinates}\n            setErrorMessage={setErrorMessage}\n          />\n\n          {errorMessage !== \"\" && <Error message={errorMessage} />}\n          {(Object.keys(apiResult).length > 0 && (\n            <div>\n              <Row className=\"buttons\">\n                <Col className=\"link\">\n                  <Button variant=\"secondary\">\n                    <Link to=\"/\">Current</Link>\n                  </Button>\n                  <Button variant=\"secondary\">\n                    <Link to=\"/daily\">Daily</Link>\n                  </Button>\n                </Col>\n              </Row>\n              <LocationBox cityName={city} datetime={apiResult.current.dt} />\n\n              <Routes>\n                <Route\n                  path=\"/\"\n                  element={<Current data={apiResult.current} />}\n                />\n                <Route\n                  path=\"/daily\"\n                  element={<Daily data={apiResult.daily} />}\n                />\n              </Routes>\n            </div>\n          )) || <Loading />}\n        </Container>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}