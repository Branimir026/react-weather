{"version":3,"sources":["components/SearchBox.js","components/LocationBox.js","components/TemperatureBox.js","components/Loading.js","components/Error.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","inputText","setCity","setInputText","Row","Col","FormControl","className","placeholder","aria-label","onChange","e","preventDefault","target","value","onKeyPress","console","log","key","LocationBox","cityName","Alert","d","stringDay","getDay","numDay","getDate","month","getMonth","year","getFullYear","getCurrentDate","Date","TemperatureBox","mainTemp","minTemp","maxTemp","stringWeather","iconId","feelsLike","humidity","lg","xs","Image","src","Math","round","Loading","span","offset","message","api","App","useState","city","apiResult","setApiResult","isCold","setIsCold","getWeather","useCallback","fetch","then","res","json","result","getIsCold","undefined","main","temp","useEffect","Container","name","temp_min","temp_max","weather","description","icon","feels_like","Error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8b94660.chunk.js","sourcesContent":["import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nfunction SearchBox({ inputText, setCity, setInputText }) {\r\n  const inputTextHandler = (e) => {\r\n    e.preventDefault();\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    console.log(e);\r\n    if (e.key === \"Enter\") {\r\n      setCity(inputText);\r\n      setInputText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <FormControl\r\n            className=\"searchBox\"\r\n            placeholder=\"Search and press enter..\"\r\n            aria-label=\"Search\"\r\n            onChange={inputTextHandler}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nfunction LocationBox({ cityName }) {\r\n  const getCurrentDate = (d) => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n\r\n    let stringDay = days[d.getDay()];\r\n    let numDay = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${stringDay} ${numDay} ${month} ${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Row className=\"cityName\">\r\n        <Alert>{cityName}</Alert>\r\n      </Row>\r\n      <Row className=\"date\">\r\n        <Alert>{getCurrentDate(new Date())}</Alert>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationBox;\r\n","import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nfunction TemperatureBox({\r\n  mainTemp,\r\n  minTemp,\r\n  maxTemp,\r\n  stringWeather,\r\n  iconId,\r\n  feelsLike,\r\n  humidity,\r\n}) {\r\n  return (\r\n    <div>\r\n      <Row className=\"temperatureBox\">\r\n        <Col lg={6} xs={12}>\r\n          <Row className=\"mainTempBox\">\r\n            <Col lg={6} xs={12} className=\"iconImg\">\r\n              <Image\r\n                src={`http://openweathermap.org/img/wn/${iconId}@2x.png`}\r\n              />\r\n            </Col>\r\n            <Col lg={6} xs={12} className=\"temp\">\r\n              <Row className=\"stringTempBox\">\r\n                <Alert className=\"mainTemp\">{Math.round(mainTemp)}째C</Alert>\r\n                <Alert className=\"stringWeather\">{stringWeather}</Alert>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col lg={6} xs={12}>\r\n          <Row className=\"statsTemp\">\r\n            <Col lg={6} xs={12}>\r\n              <Alert className=\"feelsLike\">\r\n                {Math.round(feelsLike)}째C\r\n                <br />\r\n                <p>FEELS LIKE</p>\r\n              </Alert>\r\n            </Col>\r\n            <Col lg={6} xs={12}>\r\n              <Alert className=\"maxTemp\">\r\n                {Math.round(maxTemp)}째C <br /> <p>MAX</p>\r\n              </Alert>\r\n            </Col>\r\n            <Col lg={6} xs={12}>\r\n              <Alert className=\"humidity\">\r\n                {Math.round(humidity)}% <br />\r\n                <p>HUMIDITY</p>\r\n              </Alert>\r\n            </Col>\r\n            <Col lg={6} xs={12}>\r\n              <Alert className=\"minTemp\">\r\n                {Math.round(minTemp)}째C <br />\r\n                <p>MIN</p>\r\n              </Alert>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TemperatureBox;\r\n","import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col\r\n          className=\"loading\"\r\n          lg={{ span: 6, offset: 3 }}\r\n          xs={{ span: 8, offset: 2 }}\r\n        >\r\n          <Alert>Loading...</Alert>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n//importing bootstrap components\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nfunction Loading({ message }) {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col\r\n          className=\"error\"\r\n          lg={{ span: 6, offset: 3 }}\r\n          xs={{ span: 8, offset: 2 }}\r\n        >\r\n          <Alert>{message}</Alert>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\n//import Header from \"./components/Header\";\nimport SearchBox from \"./components/SearchBox\";\nimport LocationBox from \"./components/LocationBox\";\nimport TemperatureBox from \"./components/TemperatureBox\";\nimport Loading from \"./components/Loading\";\nimport Error from \"./components/Error\";\n//importing bootstrap components\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\n\nconst api = {\n  //key: process.env.REACT_APP_WEATHER_API_KEY,\n  key: \"7c65b73889e71f8242cc2cfdca0bb056\",\n  base: \"https://api.openweathermap.org/data/2.5/weather?q=\",\n};\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [city, setCity] = useState(\"New York, US\");\n  const [apiResult, setApiResult] = useState({});\n  const [isCold, setIsCold] = useState(false);\n\n  const getWeather = useCallback(() => {\n    fetch(`${api.base}${city}&units=metric&appid=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setApiResult(result);\n      });\n  }, [city]);\n\n  const getIsCold = useCallback(() => {\n    if (apiResult.main !== undefined && apiResult.main.temp <= 15) {\n      setIsCold(true);\n    } else {\n      setIsCold(false);\n    }\n  }, [apiResult]);\n\n  useEffect(() => {\n    getWeather();\n  }, [getWeather]);\n\n  useEffect(() => {\n    getIsCold();\n  }, [getIsCold]);\n\n  return (\n    <div className={`app ${isCold ? \"cold\" : \"\"}`}>\n      <Container>\n        {/*<Header />*/}\n        <SearchBox\n          inputText={inputText}\n          setInputText={setInputText}\n          setCity={setCity}\n        />\n        {(apiResult.main !== undefined && (\n          <div>\n            <LocationBox cityName={apiResult.name} />\n            <TemperatureBox\n              mainTemp={apiResult.main.temp}\n              minTemp={apiResult.main.temp_min}\n              maxTemp={apiResult.main.temp_max}\n              stringWeather={apiResult.weather[0].description}\n              iconId={apiResult.weather[0].icon}\n              feelsLike={apiResult.main.feels_like}\n              humidity={apiResult.main.humidity}\n            />\n          </div>\n        )) ||\n          (apiResult.message !== undefined && (\n            <Error message={apiResult.message} />\n          )) || <Loading />}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}